{"version":3,"sources":["logo.svg","CreateServey.js","InputQuestion.js","FirstAnswer.js","ShowAllQuestion.js","TakeServey.js","Landing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CreateServey","props","style","color","InputQuestion","useState","question","setQuestion","answer","setAnswer","Fragment","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","onChange","e","target","value","class","type","onClick","addquestion","remove","id","FirstAnswer","addsubanswer","ShowAllQuestion","data","map","i","className","size","marginLeft","answer1","Checkbox","label","answer2","answer3","answer4","Button","background","options","TakeServey","handlequestion","setState","state","multi1","addsecondanswer","option","addthirdanswer","addforthanswer","update","temp","questions","push","selectedOption","callforsubmit","removeAnswerOption","undefined","handleChange","this","submit","console","log","React","Component","Landing","flag","setflag","height","margin","App","setFlag","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c0853749.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport PetsSharpIcon from '@material-ui/icons/PetsSharp';\n\nconst CreateServey=(props)=>{\n return(\n    <div>\n        <h1 style={{ color: \"green\"}}> <PetsSharpIcon /> Survey Tiger</h1>   \n    </div>\n )\n}\nexport default CreateServey;","import React, { useState } from 'react';\nimport \"./style.css\"\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\nimport { Form,Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nconst InputQuestion = (props) => {\n  const [question,setQuestion]=useState(\"\")\n  const [answer,setAnswer]=useState(\"\")\n  return (\n    <React.Fragment>\n      <InputGroup >\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText> ?   </InputGroupText>\n        </InputGroupAddon>\n        <Input placeholder=\"Please Enter the Question\" onChange={(e)=> setQuestion(e.target.value)} />\n      </InputGroup>\n      <div class=\"bs-example\">\n           <form>\n            <div class=\"col-sm-12\">\n                <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Answer\" onChange={(e) => setAnswer(e.target.value)} />\n                    <div class=\"input-group-append\">\n                    <span class=\"input-group-text\"  onClick={(e)=>props.addquestion(question, answer)}> + </span>\n                    <span class=\"input-group-text\" onClick={()=> {props.remove(props.id)}}> - </span>\n            </div>\n                </div>\n            </div>\n             </form>\n        </div>\n      </React.Fragment>\n  );\n};\n\nexport default InputQuestion;\n","import React,{useState} from \"react\";\nconst FirstAnswer=(props)=>{\n    const [answer, setAnswer]=useState()\n    return (\n        <React.Fragment>\n        <div class=\"bs-example\">\n           <form>\n            <div class=\"col-sm-12\">\n                <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Answer\" onChange={(e)=> setAnswer(e.target.value)}/>\n                    <div class=\"input-group-append\">\n                    <span class=\"input-group-text\"  onClick={(e)=>{props.addsubanswer(answer)}}> + </span>\n                    <span class=\"input-group-text\" onClick={()=> {props.remove(props.id)}}> - </span>\n            </div>\n                </div>\n            </div>\n             </form>\n        </div>\n        </React.Fragment>\n\n    )}\nexport default FirstAnswer;","import React from 'react';\nimport { Checkbox } from 'semantic-ui-react'\nimport { Form,Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport \"./displayquestion.css\"\nconst ShowAllQuestion=(props)=>{\n     return (\n         <div>{\n         props.data.map((i, data)=>{\n             return (\n                 <div className=\"display\">\n                <h2>\n                    {props.data[data].question}\n                </h2>\n                <h4 size=\"lg\" style={{marginLeft: \"0px\"}}>\n             {props.data[data].answer1 &&  <Checkbox label={props.data[data].answer1} /> }\n                </h4>\n                <h4 size=\"lg\" style={{marginLeft: \"0px\"}}>\n                {props.data[data].answer2    && <Checkbox label={props.data[data].answer2} /> }\n                </h4>\n                <h4 size=\"lg\" style={{marginLeft: \"0px\"}}>\n             {props.data[data].answer3 && <Checkbox label={props.data[data].answer3} />}   \n                </h4>\n                <h4 size=\"lg\" style={{marginLeft: \"0px\"}}>\n             {props.data[data].answer4 &&   <Checkbox label={props.data[data].answer4} />}   \n                </h4>\n            </div>  \n             )\n         })}\n         <Button style={{background: \"red\"}}> Confirm </Button>\n        </div>\n                 \n        )}\nexport default ShowAllQuestion;","import React from 'react';\nimport PetsSharpIcon from '@material-ui/icons/PetsSharp';\nimport Select from 'react-select';\nimport InputQuestion from './InputQuestion'\nimport FirstAnswer from './FirstAnswer'\nimport ShowAllQuestion from './ShowAllQuestion'\nimport { Form,Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\n\nconst options = [\n    { value: \"Multi\", label: 'Multi select' },\n    { value: \"Single\", label: 'Single select' },\n  ];\n  class TakeServey extends React.Component {\n    constructor(){\n      super()\n      this.state = {\n        selectedOption: null,\n        option: \"\",\n        multi1: {},\n        questions:[],\n        callforsubmit: 0\n      };\n    }\n    handlequestion = (question, answer) =>{\n      this.setState({...this.state,  multi1: {\n        \"question\": question,\n        \"answer1\": answer,\n        \"answer2\": 1\n      }})\n      \n    }\n    addsecondanswer = (answer)=> {\n      if(this.state.option===\"Multi\"){\n        this.setState({...this.state,  multi1: {\n          ...this.state.multi1,\n          \"answer2\": answer,\n          \"answer3\": 1\n        }})\n      }\n      else{\n        this.setState({...this.state,  multi1: {\n          ...this.state.multi1,\n          \"answer2\": answer,\n          \"submit\": 1\n        }})\n      }\n      \n    }\n    addthirdanswer = (answer)=> {\n      this.setState({\n        ...this.state, multi1: {\n          ...this.state.multi1, \"answer3\": answer, \"answer4\": 1\n        }\n      })\n    }\n    addforthanswer = (answer)=> {\n      this.setState({\n        ...this.state, multi1: {\n          ...this.state.multi1, \"answer4\": answer, \"submit\": 1\n        }\n      })\n      \n    }\n    \n    update=()=>{\n       const temp=this.state.questions;\n       temp.push(this.state.multi1)\n       this.setState({\n        selectedOption: null,\n        option: \"\",\n        multi1: {},\n        questions: temp\n       })\n    }\n\n    callforsubmit=()=>{\n      this.update()\n      this.setState({\n        ...this.state, \n        callforsubmit: 1\n      })\n    }\n\n    removeAnswerOption=(answer)=>{\n      if(answer===\"answer1\"){\n        this.setState({\n          ...this.state, \n          multi1 : {\n            ...this.state.multi1, \"answer1\" : undefined\n          }\n        }) \n      }\n      else if(answer===\"answer2\"){\n        this.setState({\n          ...this.state, \n          multi1 : {\n            ...this.state.multi1, \"answer2\" : undefined\n          }\n        }) \n      }\n      else if(answer===\"answer3\"){\n        this.setState({\n          ...this.state, \n          multi1 : {\n            ...this.state.multi1, \"answer3\" : undefined\n          }\n        }) \n      }\n      else if (answer===\"answer4\"){\n        this.setState({\n          ...this.state, \n          multi1 : {\n            ...this.state.multi1, \"answer4\" : undefined\n          }\n        }) \n      }\n     \n    }\n\n    handleChange = selectedOption => {\n      this.setState( { ...this.state,selectedOption: selectedOption, option: selectedOption.value });\n    };\n    render() {\n      const { selectedOption } = this.state;\n      return (\n          <React.Fragment>\n        <div>\n        <h1 style={{ color: \"green\"}}> <PetsSharpIcon /> Survey Tiger</h1>\n        <Select \n          value={selectedOption}\n          onChange={this.handleChange}\n          options={options}\n        />\n        </div>\n\n      {this.state.callforsubmit===1 ? <ShowAllQuestion data={this.state.questions}/> :  <div>     \n        {this.state.option!==\"\" && <InputQuestion addquestion={this.handlequestion} remove={this.removeAnswerOption} id=\"answer2\"/>}\n        {this.state.multi1.answer2!==undefined && <FirstAnswer addsubanswer={this.addsecondanswer} remove={this.removeAnswerOption} id=\"answer2\"/>}\n        {this.state.multi1.answer3!==undefined && <FirstAnswer addsubanswer={this.addthirdanswer} remove={this.removeAnswerOption} id=\"answer3\"/>}\n        {this.state.multi1.answer4!==undefined && <FirstAnswer addsubanswer={this.addforthanswer} remove={this.removeAnswerOption} id=\"answer4\"/>}\n        {this.state.multi1.submit!==undefined  && <Button style={{background: \"red\"}} onClick={()=> this.update()}> Add Question</Button>}\n        {this.state.multi1.submit!==undefined && <Button style={{background: \"red\"}}  onClick={ ()=> this.callforsubmit() } > Publish</Button>}</div>}\n        {console.log(this.state)}\n         \n        </React.Fragment>\n      );\n    }\n  }\nexport default TakeServey;","import React,{useState} from 'react';\nimport PetsSharpIcon from '@material-ui/icons/PetsSharp';\nimport Button from '@material-ui/core/Button';\n\nconst Landing=(props)=>{\n  const {flag, setflag}=useState(0)\n    return(\n        <React.Fragment>\n        <h1 style={{ color: \"green\"}}> <PetsSharpIcon /> Survey Tiger</h1>                                           \n         <Button style={{ background: \"red\", size: \"large\", height: \"50px\", margin: \"20px\"}} onClick={()=>props.update(1)}>\n          Create Servey\n        </Button>\n        <br/>\n        <Button style={{ background: \"red\", size: \"large\", height: \"50px\", margin: \"20px\"}} onClick={()=>props.update(2)}>\n          Take Servey\n        </Button>\n        </React.Fragment>\n        )\n}\nexport default Landing;","import React,{useState} from 'react';\nimport logo from './logo.svg';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './App.css';\nimport CreateServey from './CreateServey';\nimport TakeServey from './TakeServey';\nimport Landing from './Landing'\n\nfunction App() {\n  const [flag, setFlag] = useState(0);\n  const update=(value)=>{\n    setFlag(value)\n  }\n  return (\n    <div className=\"App\">\n      <div>\n      {(flag===0) && <Landing update={update}/>}\n      {flag===2 && <CreateServey/>}\n      {flag===1 && <TakeServey/>}\n      </div>\n    </div>\n\n  );                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}